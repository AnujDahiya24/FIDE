temp%>%
sapply(month)%>%
sapply(num)%>%
sapply(add_zero)%>%
paste("20", substr(temp, 4, 5), "-", ., "-", "01", sep = "")-> month_num
head(month_num)
proper_temp <- paste(path, temp, sep = "")
for(i in 1:length(proper_temp)) {
assign(month_num[i], fread(proper_temp[i], sep = "*", data.table = FALSE,
strip.white = TRUE, blank.lines.skip = TRUE))
}
codes <- fread("~/GitHub/Chess_data/Chess Scripts/FIDE Country Codes/FIDE_codes.csv",
sep =  "*", header = TRUE)%>%
select(Code, Country)
codes <- fread("~/GitHub/Chess_data/Chess Scripts/FIDE Country Codes/FIDE_codes.csv",
sep =  "*", header = TRUE)
codes <- fread("~/GitHub/Chess_data/Chess Scripts/FIDE Country Codes/FIDE_codes.csv",
sep =  ",", header = TRUE)%>%
select(Code, Country)
codes <- fread("~/GitHub/Chess_data/Chess Scripts/FIDE Country Codes/FIDE_codes.csv",
sep =  ",", header = TRUE)
codes <- fread("GitHub/Chess_data/Chess Scripts/FIDE Country Codes/FIDE_codes.csv",
sep =  ",", header = TRUE)
choose.dir()
year_vector <- as.character(1:as.numeric(substr(Sys.Date(), 3, 4)))
month_vector <- tolower(substr(month.name, 1, 3))
url_vector = url_vect_destfile = rep(0, length(month_vector)*length(year_vector))
for(i in 1:length(year_vector)){
if(nchar(year_vector[i]) == 1){
year_vector[i] = paste("0", year_vector[i], sep = "")
}
}
latest <- format(Sys.Date(), format="%b%Y")
latest <- paste(tolower(substr(latest, 1, 1)), substr(latest, 2, 3), substr(latest, nchar(latest)-1, nchar(latest)), "frl.zip", sep = "")
latest
for(i in seq_along(year_vector)){
for(j in seq_along(month_vector)){
if(12*(i-1)+j <= 140){
url_vector[12*(i-1)+j] = paste("http://ratings.fide.com/download/", month_vector[j], year_vector[i], "frl.zip", sep = "")
}
else if(12*(i-1)+j > 140){
url_vector[12*(i-1)+j] = paste("http://ratings.fide.com/download/standard_", month_vector[j], year_vector[i], "frl.zip", sep = "")
}
url_vect_destfile[12*(i-1)+j] <- substr(url_vector[12*(i-1)+j], nchar(url_vector[12*(i-1)+j])- 11 , nchar(url_vector[12*(i-1)+j]))
}
}
url_vect_destfile <- url_vect_destfile[1:which(url_vect_destfile == latest)]
url_vector <- url_vector[1:which(url_vect_destfile == latest)]
library(tidyverse)
library(data.table)
library(xts)
library(dygraphs)
library(foreach)
library(doParallel)
library(zoo)
library(stringi)
library(cowplot)
library(gganimate)
library(lubridate)
path = "~/GitHub/FIDE/Chess Scripts/Step 2 - Reformat/Data csvs/"
knitr::opts_knit$set(root.dir = path)
temp = list.files(path = path,
pattern = "\\.csv?")
head(temp)
num <- function(x) match(tolower(x), tolower(month.abb))
month <- function(x){return(substr(x, 1, 3))}
add_zero <- function(x){if (x <= 9){x = paste("0", x, sep = "")}; return(x)}
temp%>%
sapply(month)%>%
sapply(num)%>%
sapply(add_zero)%>%
paste("20", substr(temp, 4, 5), "-", ., "-", "01", sep = "")-> month_num
head(month_num)
proper_temp <- paste(path, temp, sep = "")
for(i in 1:length(proper_temp)) {
assign(month_num[i], fread(proper_temp[i], sep = "*", data.table = FALSE,
strip.white = TRUE, blank.lines.skip = TRUE))
}
# cl<-makeCluster(detectCores())
# registerDoParallel(cl)
# temp_short = proper_temp[1:5]
# FIDE<-foreach(i=proper_temp, .export = "fread") %dopar% {
# t <- fread(i, sep = "*", data.table = FALSE, strip.white = TRUE,
# blank.lines.skip = TRUE)
#                                                                  }
# stopCluster(cl)
FIDE <- mget(ls(pattern = "[0-9][0-9]-[0-9][0-9]"))
rm(list=setdiff(ls(), c("FIDE", "ptm")))
#Help rename columns in the data
vector_months <- c(month.abb, tolower(month.abb),toupper(month.abb))
string = ""
for (i in 1:length(vector_months)){
if (i == 1){string = vector_months[i]}
else if (i > 1) {string = paste(string, vector_months[i], sep = "|")}
}
string = paste(string, "RATING", sep = "|")
# names(FIDE) <- month_num
old = c("c", "wc", "WC", "wg", "WF", "wf", "g", "m", "f", "wm", "gm" )
new = c("CM", "WCM", "WCM", "WGM", "WFM", "WFM", "GM", "IM", "FM", "WIM", "GM")
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] <-  FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))
}
names(FIDE)
FIDE[[1]]
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] <-  FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-V1)
}
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] <-  FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))
}
FIDE[[1]]
FIDE[[1]]
path = "~/GitHub/FIDE/Chess Scripts/Step 2 - Reformat/Data csvs/"
temp = list.files(path = path,
pattern = "\\.csv?")
temp[1]
names(FIDE[[1]])
name(FIDE[[1]])
name(FIDE)
names(FIDE)
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))]
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))]
num <- function(x) match(tolower(x), tolower(month.abb))
month <- function(x){return(substr(x, 1, 3))}
add_zero <- function(x){if (x <= 9){x = paste("0", x, sep = "")}; return(x)}
temp%>%
sapply(month)%>%
sapply(num)%>%
sapply(add_zero)%>%
paste("20", substr(temp, 4, 5), "-", ., "-", "01", sep = "")-> month_num
library(tidyverse)
library(data.table)
library(xts)
library(dygraphs)
library(foreach)
library(doParallel)
library(zoo)
library(stringi)
library(cowplot)
library(gganimate)
library(lubridate)
path = "~/GitHub/FIDE/Chess Scripts/Step 2 - Reformat/Data csvs/"
knitr::opts_knit$set(root.dir = path)
temp = list.files(path = path,
pattern = "\\.csv?")
head(temp)
num <- function(x) match(tolower(x), tolower(month.abb))
month <- function(x){return(substr(x, 1, 3))}
add_zero <- function(x){if (x <= 9){x = paste("0", x, sep = "")}; return(x)}
temp%>%
sapply(month)%>%
sapply(num)%>%
sapply(add_zero)%>%
paste("20", substr(temp, 4, 5), "-", ., "-", "01", sep = "")-> month_num
head(month_num)
proper_temp <- paste(path, temp, sep = "")
for(i in 1:length(proper_temp)) {
assign(month_num[i], fread(proper_temp[i], sep = "*", data.table = FALSE,
strip.white = TRUE, blank.lines.skip = TRUE))
}
#Put datasets in list
FIDE <- mget(ls(pattern = "[0-9][0-9]-[0-9][0-9]"))
rm(list=setdiff(ls(), c("FIDE", "month_num", "path", "proper_temp", "temp")))
#Help rename columns in the data
vector_months <- c(month.abb, tolower(month.abb),toupper(month.abb))
string = ""
for (i in 1:length(vector_months)){
if (i == 1){string = vector_months[i]}
else if (i > 1) {string = paste(string, vector_months[i], sep = "|")}
}
new = c("CM", "WCM", "WCM", "WGM", "WFM", "WFM", "GM", "IM", "FM", "WIM", "GM")
old = c("c", "wc", "WC", "wg", "WF", "wf", "g", "m", "f", "wm", "gm" )
paste(path, temp[1])
paste(path, temp[1], sep = "")
paste(path, temp, sep = "")
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))%>%
fwrite(. , file = paste(path, temp[i], sep = ""))
}
FIDE[[9]]
string
string = paste(string, "RATING", sep = "|")
string
string = paste(string, "RATING", sep = "|")
string
string = ""
for (i in 1:length(vector_months)){
if (i == 1){string = vector_months[i]}
else if (i > 1) {string = paste(string, vector_months[i], sep = "|")}
}
string = paste(string, "RATING", sep = "|")
new = c("CM", "WCM", "WCM", "WGM", "WFM", "WFM", "GM", "IM", "FM", "WIM", "GM")
old = c("c", "wc", "WC", "wg", "WF", "wf", "g", "m", "f", "wm", "gm" )
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))%>%
fwrite(. , file = paste(path, temp[i], sep = ""))
}
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))%>%
fwrite(. , file = paste(path, temp[i], sep = "*"))
}
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))%>%
fwrite(. , file = paste(path, temp[i], sep = ""), sep = "*")
}
names(FIDE)
names(FIDE)%>%data.frame()
names(FIDE)
dates = names(FIDE)
months(dates)
dates = as.Date(names(FIDE))
months(dates)
toupper(months(dates))
months(dates)%>%
toupper()%>%
substr(., 1, 3)
year(dates)
year(dates)%>%
as.character()%>%
substr(2,4)
year(dates)%>%
as.character()%>%
substr(3,4)
months_vec <- months(dates)%>%
toupper()%>%
substr(., 1, 3)
year_vec <- year(dates)%>%
as.character()%>%
substr(3,4)
months_vec
files <- paste(months_vec, year_vec, ".csv", sep = "")
files
path
#Insert month column
for(i in 1:length(FIDE)){
colnames(FIDE[[i]])[grepl("Name|NAME|name", colnames(FIDE[[i]]))] <- "Name"
colnames(FIDE[[i]])[grepl("NUMBER", colnames(FIDE[[i]]))] <- "ID_Number"
colnames(FIDE[[i]])[grepl("Fed|FED|COUNTRY", colnames(FIDE[[i]]))] <- "Country"
colnames(FIDE[[i]])[grepl("Gms|GAMES|GM|Game|GAME", colnames(FIDE[[i]]))] <- "Games"
colnames(FIDE[[i]])[grepl("K", colnames(FIDE[[i]]))] <- "K_factor"
colnames(FIDE[[i]])[grepl("FLAG|Flag|flag", colnames(FIDE[[i]]))] <- "Activity"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("Wtit","wtit","WTIT", "WTit")] <- "Womens_Title"
colnames(FIDE[[i]])[colnames(FIDE[[i]]) %in% c("TITLE","Title","title","Tit")] <- "Title"
colnames(FIDE[[i]])[grepl(string, colnames(FIDE[[i]]))] <- "Rating"
colnames(FIDE[[i]])[grepl("Born|Age|age|BIRTHDAY|B-day|Bday", colnames(FIDE[[i]]))] <- "Age_Birthday"
colnames(FIDE[[i]])[grepl("SEX", colnames(FIDE[[i]]))] <- "Sex"
colnames(FIDE[[i]])[grepl("FOA", colnames(FIDE[[i]]))] <- "FIDE_Online_Arena"
colnames(FIDE[[i]])[grepl("OTit", colnames(FIDE[[i]]))] <- "Other_Titles"
FIDE[[i]] %>%
mutate(Date = as.POSIXct(names(FIDE)[i], format="%Y-%m-%d"),
Date_numeric = year(Date)+yday(Date)/366,
Rating = as.numeric(Rating),
Title= c(new, Title)[match(Title, c(old, Title))])%>%
filter(!Country %in% c("Fed", "Col"))%>%
select(-one_of("V1"))%>%
fwrite(. , file = paste(path, files[i], sep = ""), sep = "*")
}
library(knitr)
library(tidyverse)
library(data.table)
library(Kmisc)
library(foreach)
library(doParallel)
path = "~/GitHub/FIDE/Chess Scripts/Step 1 - Download/Downloaded files"
destination = "~/GitHub/FIDE/Chess Scripts/Step 2 - Reformat/Data csvs/"
opts_knit$set(root.dir = path)
reformat <- function(file_csv, df){
#Reformat October 2002
if(file_csv == "OCT02FRL.TXT"){df[1] <- df[1]%>%
gsub("COUNTRY", "  Fed ", .)%>%
gsub("GAMES", "Gms", .)%>%
gsub("BIRTHDAY", " BIRTHDAY", .)}
#Reformat April 2003
else if(file_csv == "APR03FRL.TXT"){df[1] <- df[1]%>%
gsub("   CODE  ","ID_NUMBER",.)%>%
gsub("COUNTRY","  FED  ",.)%>%
gsub(" APR03", "APR03 ", .)%>%
gsub(" GAMES", "GMS   ", .)%>%
gsub("  BIRTHDAY", "BIRTHDAY  ", .)%>%
gsub(" FLAG", "FLAG ", .)}
#Reformat April, July, October 2004 & January, July 2005
else if(file_csv %in% c("APR04FRL.TXT","JUL04FRL.TXT","OCT04FRL.TXT",
"JAN05FRL.TXT", "JUL05FRL.TXT")){
df[1] <- df[1]%>%
gsub("COUNTRY", "   FED ", . )%>%
gsub("GAMES", "GAME ", .)%>%
gsub(" BIRTHDAY", "BIRTHDAY", .)}
#Reformat January 2006 to July 2012
else if(file_csv == "JAN06FRL.TXT"){df <- df[-2]}
else if(file_csv %in% c("APR06FRL.TXT", "JUL06FRL.TXT", "OCT06FRL.TXT",
list.files(pattern = "[0][7-9][Ff][Rr][Ll].[Tt][Xx][Tt]"),
list.files(pattern = "[1][0-1][Ff][Rr][Ll].[Tt][Xx][Tt]"),
list.files(pattern = "[1][2][Ff][Rr][Ll].[Tt][Xx][Tt]")[1:5])){
df[1] <- df[1] %>% gsub("Titl", "Tit ", .)%>%
gsub("Games", "Game ", .)%>%
gsub("July", "Jul", .)}
#Insert underscore to make sure that proper columns are created in the functions afterwards
df[1] <- gsub("ID Number", "ID_NUMBER", df[1])%>%
gsub("ID number", "ID_NUMBER", .)
return(df)
}
indexes <- function(df){
column_vector<- df[1]
indexes <- rep(0, nchar(df[1]))
for(i in 1:nchar(column_vector)){
index = grep("\\s[A-z]", substr(column_vector, i, i+1))
if (identical(index, integer(0)) == TRUE){indexes[i] = 0}
else {indexes[i] = 1}
}
return(which(indexes == 1))
}
utf_func <- function(df, indexed){
string <- utf8ToInt(df)
string[indexed] <- utf8ToInt("*")
return(intToUtf8(string))
}
filenamer <- function(Year_num) {
Year_num%>%
substr(., nchar(.)-11, nchar(.)-7)%>%
toupper()%>%
paste(destination, ., ".csv", sep = "")
}
fwrite_wrapper <- function(filename, df){
if (file.exists(filename)) {unlink(filename)}
fwrite(list(df), file = filename, quote = FALSE)
}
All_files_fwrite <- function(year_vector){
text_insert_first = c("jul03frl.txt","OCT03FRL.TXT", "JAN04FRL.TXT",
"APR05FRL.TXT", "jan03frl.txt")
columns = "ID_NUMBER NAME                            TITLE FED  RATING GM  Bday      Flag "
if(year_vector %in% text_insert_first){
df = readLines(year_vector)
if(nchar(df[1]) != 0) {
cat("", df, file = year_vector, sep = "\n")
df <- readLines(year_vector)
df[1] <- columns} else{df[1] <- columns}
} else {df = readlines(year_vector)}
df <- reformat(year_vector, df)
indexed = indexes(df)
df = sapply(df , utf_func, indexed = indexed, USE.NAMES = FALSE)
filename <- filenamer(year_vector)
fwrite_wrapper(df, file = filename)
}
multi_processing <- function(Year_num){
functions = ls(globalenv())
cl <- makeCluster(detectCores())
clusterExport(cl, functions)
registerDoParallel(cl)
foreach(i = Year_num,
.export = functions,
.packages = c("dplyr",
"data.table",
"Kmisc")) %dopar% {All_files_fwrite(i)}
stopCluster(cl)
}
Year_num <- list.files(path = path, pattern = "[Ff][Rr][Ll].[Tt][Xx][Tt]")
unlink(list.files(path = destination, pattern = "*.csv"))
system.time(multi_processing(Year_num))
Year_num <- list.files(path = path, pattern = "[Ff][Rr][Ll].[Tt][Xx][Tt]")
opts_knit$set(root.dir = destination)
list.files(path = destination, pattern = "*.csv")
unlink(list.files(path = destination, pattern = "*.csv"))
opts_knit$set(root.dir = destination)
unlink(list.files(path = destination, pattern = "*.csv"))
setwd("~/GitHub/FIDE/Chess Scripts/Step 2 - Reformat/Data csvs")
unlink(list.files(path = destination, pattern = "*.csv"))
Year_num <- list.files(path = path, pattern = "[Ff][Rr][Ll].[Tt][Xx][Tt]")
system.time(multi_processing(Year_num))
setwd("~/GitHub/FIDE/Chess Scripts/Step 1 - Download/Downloaded files")
Year_num <- list.files(path = path, pattern = "[Ff][Rr][Ll].[Tt][Xx][Tt]")
system.time(multi_processing(Year_num))
system.time(multi_processing(Year_num))
head(list.files(path = destination, pattern = "*.csv"))
